{"ast":null,"code":"import { FETCH_DATA, FETCH_SUCCESS, FETCH_ERROR, ADD_DATA, ADD_SUCCESS, ADD_ERROR } from '../actions/classAction';\nconst initialState = {\n  classes: [],\n  isFetching: false,\n  errors: ''\n};\n\nconst classReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_DATA:\n      return { ...state,\n        isFetching: true\n      };\n\n    case FETCH_SUCCESS:\n      return { ...state,\n        isFetching: false,\n        classes: action.payload,\n        error: \"\"\n      };\n\n    case FETCH_ERROR:\n      return { ...state,\n        isFetching: false,\n        error: action.payload\n      };\n\n    case ADD_DATA:\n      return { ...state,\n        isAdding: true,\n        classes: [...state.classes]\n      };\n\n    case ADD_SUCCESS:\n      return { ...state,\n        isAdding: false,\n        classes: action.payload,\n        error: \"\"\n      };\n\n    case ADD_ERROR:\n      return { ...state,\n        isAdding: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default classReducer;","map":{"version":3,"sources":["/Users/osvaldo.lievano/Front-End/anywherefit/src/utils/reducers/classReducer.js"],"names":["FETCH_DATA","FETCH_SUCCESS","FETCH_ERROR","ADD_DATA","ADD_SUCCESS","ADD_ERROR","initialState","classes","isFetching","errors","classReducer","state","action","type","payload","error","isAdding"],"mappings":"AAAA,SACIA,UADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,QAJJ,EAKIC,WALJ,EAMIC,SANJ,QAMqB,wBANrB;AAQA,MAAMC,YAAY,GAAG;AACrBC,EAAAA,OAAO,EAAE,EADY;AAErBC,EAAAA,UAAU,EAAE,KAFS;AAGrBC,EAAAA,MAAM,EAAC;AAHc,CAArB;;AAMI,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,UAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELH,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAKP,aAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELH,QAAAA,UAAU,EAAE,KAFP;AAGLD,QAAAA,OAAO,EAAEK,MAAM,CAACE,OAHX;AAILC,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAMF,SAAKb,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,UAAU,EAAE,KAFP;AAGLO,QAAAA,KAAK,EAAEH,MAAM,CAACE;AAHT,OAAP;;AAKA,SAAKX,QAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELK,QAAAA,QAAQ,EAAE,IAFL;AAGLT,QAAAA,OAAO,EAAE,CAAC,GAAGI,KAAK,CAACJ,OAAV;AAHJ,OAAP;;AAKF,SAAKH,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELK,QAAAA,QAAQ,EAAE,KAFL;AAGLT,QAAAA,OAAO,EAAEK,MAAM,CAACE,OAHX;AAILC,QAAAA,KAAK,EAAE;AAJF,OAAP;;AAMF,SAAKV,SAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELK,QAAAA,QAAQ,EAAE,KAFL;AAGLD,QAAAA,KAAK,EAAEH,MAAM,CAACE;AAHT,OAAP;;AAKF;AACI,aAAOH,KAAP;AAvCR;AAyCH,CA1CD;;AA2CA,eAAeD,YAAf","sourcesContent":["import {\n    FETCH_DATA,\n    FETCH_SUCCESS,\n    FETCH_ERROR,\n    ADD_DATA,\n    ADD_SUCCESS,\n    ADD_ERROR,} from '../actions/classAction';\n\nconst initialState = {\nclasses: [],\nisFetching: false,\nerrors:''\n    };\n\n    const classReducer = (state = initialState, action) => {\n        switch (action.type) {\n          case FETCH_DATA:\n            return {\n              ...state,\n              isFetching: true,\n            };\n          case FETCH_SUCCESS:\n            return {\n              ...state,\n              isFetching: false,\n              classes: action.payload,\n              error: \"\",\n            };\n          case FETCH_ERROR:\n            return {\n              ...state,\n              isFetching: false,\n              error: action.payload,\n            };\n            case ADD_DATA:\n              return {\n                ...state,\n                isAdding: true,\n                classes: [...state.classes],\n              };\n            case ADD_SUCCESS:\n              return {\n                ...state,\n                isAdding: false,\n                classes: action.payload,\n                error: \"\",\n              };\n            case ADD_ERROR:\n              return {\n                ...state,\n                isAdding: false,\n                error: action.payload,\n              };\n            default:\n                return state;\n        }\n    };\n    export default classReducer;"]},"metadata":{},"sourceType":"module"}